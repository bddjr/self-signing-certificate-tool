import fs from 'fs'
import zlib from 'zlib'
import { minify } from 'html-minifier-terser'
import { pathToFileURL } from 'url'

const outpath = 'dist/ssct.html'

const wasm_exec = fs.readFileSync('wasm/wasm_exec.js').toString()
const wasm_main = fs.readFileSync('wasm/main.wasm').toString('base64')

let html = fs.readFileSync('frontend/index.html')
    .toString()
    .split(`fetch("../wasm/main.wasm"`, 2)
    .join(`fetch("data:application/wasm;base64,${wasm_main}"`)
    .split(` src="../wasm/wasm_exec.js">`, 2)
    .join(`>${wasm_exec}`)

html = await minify(html, {
    collapseWhitespace: true,
    collapseInlineTagWhitespace: true,
    minifyCSS: true,
    minifyJS: true,
    removeAttributeQuotes: true,
    removeComments: false,
    removeRedundantAttributes: true,
    removeScriptTypeAttributes: true,
    removeStyleLinkTypeAttributes: true,
    removeOptionalTags: true,
    includeAutoGeneratedTags: false,
})

if (!fs.existsSync('dist')) fs.mkdirSync('dist')

fs.writeFileSync(outpath, html)
fs.writeFileSync(`${outpath}.gz`, zlib.gzipSync(html, { level: zlib.constants.Z_BEST_COMPRESSION }))
fs.writeFileSync(`${outpath}.br`, zlib.brotliCompressSync(html))

console.log(`
${pathToFileURL(outpath)}
`)
